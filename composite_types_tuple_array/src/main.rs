// Композитные типы. Кортеж и массив
fn main() {
    // 1. Кортеж. Коллекция фиксированного размера элементов одного или разных типов.
    let my_info = ("Зарплата", 380_000);
    println!("{}, {}", my_info.0, my_info.1);

    // Деструкция (распаковывание) кортежа
    let (salary, slalary_value) = my_info;
    println!("{0} = {1}", &salary, slalary_value);

    // Кортеж в кортеже
    let tupl_value = (1, 8.0, (4, 8), "ПРивет!");
    let res_value = tupl_value.2 .1;
    println!(
        "Значение 2-го эелемента (вложенный кортеж, индекс 1) по индексу 2 = {}",
        res_value
    );

    // Пустой кортеж. Unit
    let unit_value = ();
    println!("Значение пустого кортежа: {:?}", unit_value);

    // 2. Массив
    let number_array: [i8; 5] = [ 5, 6, 7, 8, 9];
    println!("Массив: {:?}", number_array);

    // Автозаполнение
    let arr_ten_zero = [8; 10];
    println!("Массив из 10 восьмерок: {:?}", arr_ten_zero);

    // Массив строк
    let arr_string = ["Яблоко", "Помидор", "Виноград", "Жимолость"];
    println!("{:?}", arr_string);

    // Массив символов
    let arr_chars = ['a', 'b', 'c', 'd'];
    println!("{:?}", arr_chars);

    // Срез (slice) - отображает фрагмент массиваб его подмножество, это ссылки на элементы массива
    let  num_arr: [i32; 5] = [4, 5, 6, 7, 8];
    let slice_arr: &[i32] = &num_arr[1..=3];
    println!("Срез массива: {:?}", slice_arr);
    println!("Колличество элементов массива: {:?}", num_arr.len());

    // Популярные функции для работы с массивом
    // Колличество байт занимаемых массивом в памяти
    println!("Колличество байт занимаемых массивом в памяти = {} байт.", std::mem::size_of_val(&num_arr));

    // Есть ли такой индекс в массиве? Если нет - вернуть None. Если ДА - вернуть Some(index)
    let check_index_arr = num_arr.get(4);
    println!("Есть ли индекс 120 в массиве: {:?}", check_index_arr);
}
